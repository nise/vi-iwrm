OpenLayers.ProxyHost = "/cgi-bin/proxy.cgi?url=";
		var size = new OpenLayers.Size(26,53);
		var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
		var icon = new OpenLayers.Icon('http://maps.burningsilicon.net/OpenLayers-2.8/marker.png',size,offset);
		var markers = new OpenLayers.Layer.Markers( "Markers");
		var markerUrl = "";
		var map;
		
		OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, {                
                defaultHandlerOptions: {
                    'single': true,
                    'double': false,
                    'pixelTolerance': 0,
                    'stopSingle': false,
                    'stopDouble': false
                },

                initialize: function(options) {
                    this.handlerOptions = OpenLayers.Util.extend(
                        {}, this.defaultHandlerOptions
                    );
                    OpenLayers.Control.prototype.initialize.apply(
                        this, arguments
                    ); 
                    this.handler = new OpenLayers.Handler.Click(
                        this, {
                            'click': this.trigger
                        }, this.handlerOptions
                    );
                }, 

                trigger: function(e) {
                    var lonlat = map.getLonLatFromViewPortPx(e.xy);
                    lonlat.transform(new OpenLayers.Projection("EPSG:900913"),new OpenLayers.Projection("EPSG:4326"));
                    markerUrl = markerUrl + lonlat.lon.toFixed(5) + "," + lonlat.lat.toFixed(5) + "|";
                    document.getElementById('markerLink').innerHTML = "<a href=http://maps.burningsilicon.net/index.php?coords=" + markerUrl + ">Link to map with current markers</a>";
					<!-- Convert to lan/long format for consistancy, even though it gets converted back straight away -->
                    lonlat.transform(new OpenLayers.Projection("EPSG:4326"), new OpenLayers.Projection("EPSG:900913"));
                    markers.addMarker(new OpenLayers.Marker(lonlat, icon.clone()));
                    
                }

            });
		
		function init()
		{
			map = new OpenLayers.Map ("map", {
			controls:[
			new OpenLayers.Control.Navigation(),
			new OpenLayers.Control.PanZoomBar(),
			new OpenLayers.Control.LayerSwitcher(),
			new OpenLayers.Control.Attribution(),
			new OpenLayers.Control.Permalink(),
			new OpenLayers.Control.ScaleLine(),
			new OpenLayers.Control.OverviewMap(),
			new OpenLayers.Control.MousePosition()],
			maxResolution: 156543.0399,
			numZoomLevels: 19,
			units: 'm',
			projection: new OpenLayers.Projection("EPSG:900913"),
			displayProjection: new OpenLayers.Projection("EPSG:4326")
			} );

			var layerMapnik = new OpenLayers.Layer.OSM.Mapnik("Mapnik");
			map.addLayer(layerMapnik);	
			
			map.addLayer(markers);
			
			var cloudmade = new OpenLayers.Layer.CloudMade("CloudMade", {
			key: '8a17846d483358038081b1fd46999481', styleId: 1924});
			map.addLayer(cloudmade);
			
			var layerTilesAtHome = new OpenLayers.Layer.OSM.Osmarender("Osmarender");
			map.addLayer(layerTilesAtHome);
			
			var layerCycleMap = new OpenLayers.Layer.OSM.CycleMap("CycleMap");
			map.addLayer(layerCycleMap);
			
			var center = new OpenLayers.LonLat(153.02775, -27.47558).transform(new OpenLayers.Projection("EPSG:4326"), map.getProjectionObject());
			
			var zoom = 11
			map.setCenter(center, zoom);
			
			var coordAddy = "<?=$coords ?>";
			if(coordAddy.length > 2)
			{
				<?php
                	//Try calling the existing function
					echo ("<!-- Marker Array Generated by php -->\r\n");
					addMarkers($markers);
				?>
				
				map.zoomToExtent(markers.getDataExtent());
				markerUrl = coordAddy;
                document.getElementById('markerLink').innerHTML = "<a href=http://maps.burningsilicon.net/index.php?coords=" + markerUrl + ">Link to map with current markers</a>";
            }
			
			var urlAddy = "<?=$url ?>";
			if(urlAddy.length > 2)
			{
				vectorLayer = new OpenLayers.Layer.GML("KML", '<?=$url ?>', 
				{
				projection: new OpenLayers.Projection("EPSG:4326"),
				eventListeners: { 'loadend': kmlLoaded },
				format: OpenLayers.Format.KML, 
				formatOptions: {
				style: {strokeColor: "green", strokeWidth: 5, strokeOpacity: 0.5},
				extractStyles: true, 
				maxDepth: 2,
				extractAttributes: true
				}
				})
				
				map.addLayer(vectorLayer);
		
				selectControl = new OpenLayers.Control.SelectFeature(map.layers[5],
				{onSelect: onFeatureSelect, onUnselect: onFeatureUnselect});
				map.addControl(selectControl);
				selectControl.activate();
			}
			
			var click = new OpenLayers.Control.Click();
            map.addControl(click);
            click.activate();
		}
		
		function onPopupClose(evt) 
		{
			selectControl.unselect(selectedFeature);
		}
			
		function onFeatureSelect(feature) 
		{
			selectedFeature = feature;
			popup = new OpenLayers.Popup.FramedCloud("chicken", 
			feature.geometry.getBounds().getCenterLonLat(),
			new OpenLayers.Size(100,150),
			"<div style='font-size:.8em'><b>Name:</b>"+feature.attributes.name+"<br><b>Description:</b>"+feature.attributes.description+"</div>",
			null, true, onPopupClose);
			feature.popup = popup;
			map.addPopup(popup);
		}
		
		function onFeatureUnselect(feature) 
			{
			map.removePopup(feature.popup);
			feature.popup.destroy();
			feature.popup = null;
			}
		
		function kmlLoaded()
			{
			map.zoomToExtent(vectorLayer.getDataExtent());
			}
